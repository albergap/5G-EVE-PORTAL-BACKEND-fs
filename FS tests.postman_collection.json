{
	"info": {
		"_postman_id": "cf124a39-0519-43c4-a958-1ceb2e5a1d80",
		"name": "FS tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "de3bb494-195a-4365-a718-09c536a504d4",
						"exec": [
							"pm.environment.set('access_token_user', \"Bearer \" + pm.response.json().access_token)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\"email\": \"user@mail.com\",\n\"password\": \"pass\"\n}"
				},
				"url": {
					"raw": "http://localhost:8090/portal/catalogue/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8090",
					"path": [
						"portal",
						"catalogue",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "login admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9794934f-22cb-4ab0-b2f8-c818f38e694a",
						"exec": [
							"pm.environment.set('access_token_admin', \"Bearer \" + pm.response.json().access_token)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\"email\": \"admin@mail.com\",\n\"password\": \"admin\"\n}"
				},
				"url": {
					"raw": "http://localhost:8090/portal/catalogue/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8090",
					"path": [
						"portal",
						"catalogue",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "upload unauth",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "81ec9860-bb63-41e2-bc95-6c59852609dc",
						"exec": [
							"pm.test(\"Must be 403 Forbidden\", function(){",
							"    pm.response.to.have.status(403);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"type": "text",
						"value": "multipart/form-data"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/Z:/TFG/upload.zip"
						},
						{
							"key": "dzuuid",
							"value": "uuidPostman",
							"type": "text"
						},
						{
							"key": "List<site>",
							"value": "s1,s2",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://localhost:8091/fs/upload",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8091",
					"path": [
						"fs",
						"upload"
					]
				}
			},
			"response": []
		},
		{
			"name": "upload user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "81ec9860-bb63-41e2-bc95-6c59852609dc",
						"exec": [
							"pm.test(\"Must be 200 OK or 409 Conflict\", function(){",
							"    pm.expect(pm.response.code).to.be.oneOf([200,409]);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"type": "text",
						"value": "multipart/form-data"
					},
					{
						"key": "Authorization",
						"value": "{{access_token_user}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/Z:/TFG/upload.zip"
						},
						{
							"key": "dzuuid",
							"value": "uuidPostman",
							"type": "text"
						},
						{
							"key": "List<site>",
							"value": "s1,s2",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://localhost:8091/fs/upload",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8091",
					"path": [
						"fs",
						"upload"
					]
				}
			},
			"response": []
		},
		{
			"name": "upload admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "371076b6-7199-4cb0-bb88-45c80c0f1e89",
						"exec": [
							"pm.test(\"Must be 403 Forbidden\", function(){",
							"    pm.response.to.have.status(403);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"type": "text",
						"value": "multipart/form-data"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{access_token_admin}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/Z:/TFG/upload.zip"
						},
						{
							"key": "dzuuid",
							"value": "uuidPostman",
							"type": "text"
						},
						{
							"key": "List<site>",
							"value": "s1,s2",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://localhost:8091/fs/upload",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8091",
					"path": [
						"fs",
						"upload"
					]
				}
			},
			"response": []
		},
		{
			"name": "download unauth",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "15e66045-7b51-466d-9def-184f1ad7369e",
						"exec": [
							"pm.test(\"Must be 403 Forbidden\", function(){",
							"    pm.response.to.have.status(403);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8091/fs/download/uuidPostman",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8091",
					"path": [
						"fs",
						"download",
						"uuidPostman"
					]
				}
			},
			"response": []
		},
		{
			"name": "download user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "15e66045-7b51-466d-9def-184f1ad7369e",
						"exec": [
							"pm.test(\"Must be 403 Forbidden\", function(){",
							"    pm.response.to.have.status(403);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{access_token_user}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8091/fs/download/uuidPostman",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8091",
					"path": [
						"fs",
						"download",
						"uuidPostman"
					]
				}
			},
			"response": []
		},
		{
			"name": "download admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5c0bdecb-0e49-45f8-a14d-bcb30ce23ba1",
						"exec": [
							"pm.test(\"Must be 200 OK\", function(){",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{access_token_admin}}"
					}
				],
				"url": {
					"raw": "http://localhost:8091/fs/download/uuidPostman",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8091",
					"path": [
						"fs",
						"download",
						"uuidPostman"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}