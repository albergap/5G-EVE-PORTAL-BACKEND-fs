openapi: 3.0.0
info:
  description: This is 5G-EVE-FS API. Files are identified by uuid and owner (two owners can have the same name of file). All requests needs Bearer token (access token of Keycloak)
  version: "1.0.0"
  title: 5G-EVE-FS API
tags:
  - name: FS
    description: FS calls
paths:
  /fs/download/{uuid}/{owner}:
    get:
      tags:
        - FS
      summary: Download a file
      parameters:
        - in: path
          name: uuid
          description: uuid of file
          required: true
          schema:
            type: string
        - in: path
          name: owner
          description: owner of file
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Download the file
          content:
            application/octet-stream:
              schema:
                  type: string
                  format: binary
        '401':
          description: unauthorized
        '403':
          description: when the user authenticated does not have access to file
        '404':
          description: when the file does not exist
  /fs/upload:
    post:
      tags:
        - FS
      summary: Upload a file
      parameters:
        - in: header
          name: file
          description: file
          required: true
          schema:
            type: string
        - in: header
          name: List<site>
          description: list of sites for deploy
          required: true
          schema:
            type: array
            items:
              type: string
      security:
        - bearerAuth: []
      responses:
        '202':
          description: file accepted
        '401':
          description: unauthorized
        '403':
          description: when the user authenticated does not have access to file
        '409':
          description: that file already exists
  /fs/list:
    get:
      tags:
        - FS
      summary: get all files owned (if the user is a developer), get all files with a site managed (if the user is a manager)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: list of files
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
        '204':
          description: no content
        '401':
          description: unauthorized
  /fs/deploy/{uuid}/{owner}:
    put:
      tags:
        - FS
      summary: deploy a file
      parameters:
        - in: path
          name: uuid
          description: uuid of file
          required: true
          schema:
            type: string
        - in: path
          name: owner
          description: owner of file
          required: true
          schema:
            type: string
        - in: query
          name: site
          description: deployment site
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: file deployed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
        '204':
          description: no content
        '400':
          description: query param site empty
        '401':
          description: unauthorized
        '404':
          description: the file does not exists
  /fs/delete/{uuid}/{owner}:
    delete:
      tags:
        - FS
      summary: delete a deployment request
      parameters:
        - in: path
          name: uuid
          description: uuid of file
          required: true
          schema:
            type: string
        - in: path
          name: owner
          description: owner of file
          required: true
          schema:
            type: string
        - in: query
          name: site
          description: site of deployment request
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: file removed
        '401':
          description: unauthorized
        '404':
          description: the file or deployment request does not exists
components:
  schemas:
    File:
      type: object
      properties:
        uuid:
          type: string
        owner:
          type: string
        deployment_requests:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentRequest'
    DeploymentRequest:
      type: object
      properties:
        site:
          type: string
        status:
          type: string
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer