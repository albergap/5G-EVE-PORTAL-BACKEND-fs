openapi: 3.0.0
info:
  description: This is 5G-EVE-FS API. Files are identified by uuid and owner (two owners can have the same name of file). All requests needs Bearer token (access token of Keycloak)
  version: "1.0.0"
  title: 5G-EVE-FS API
tags:
  - name: Files
  - name: Deployment requests
paths:
  /fs:
    get:
      tags:
        - Files
      summary: Get all files owned if the user is developer. Get all files with sites managed if the user is manager
      security:
        - bearerAuth: []
      responses:
        '200':
          description: list of files
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
        '204':
          description: no content
        '401':
          description: unauthorized
    post:
      tags:
        - Files
      summary: Upload a file
      parameters:
        - in: header
          name: file
          description: file
          required: true
          schema:
            type: string
        - in: header
          name: sites
          description: list of sites for deploy
          required: true
          schema:
            type: array
            items:
              type: string
      security:
        - bearerAuthDeveloper: []
      responses:
        '202':
          description: file accepted
        '400':
          description: bad request
        '401':
          description: unauthorized
        '403':
          description: the user authenticated does not have access to file
        '409':
          description: that file already exists
        '413':
          description: Payload Too Large when the file exceeds the maximum
  /fs/{uuid}/{owner}:
    get:
      tags:
        - Files
      summary: Get information of file
      security:
        - bearerAuth: []
      responses:
        '200':
          description: file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        '400':
          description: bad request
        '401':
          description: unauthorized
        '403':
          description: the user authenticated does not have access to file
        '404':
          description: not found
    delete:
      tags:
        - Files
      summary: Delete a file
      parameters:
        - in: path
          name: uuid
          description: uuid of file
          required: true
          schema:
            type: string
        - in: path
          name: owner
          description: owner of file
          required: true
          schema:
            type: string
      security:
        - bearerAuthDeveloper: []
      responses:
        '200':
          description: file removed
        '400':
          description: bad request
        '401':
          description: unauthorized
        '404':
          description: the file does not exists
  /fs/download/{uuid}/{owner}:
    get:
      tags:
        - Files
      summary: Download a file
      parameters:
        - in: path
          name: uuid
          description: uuid of file
          required: true
          schema:
            type: string
        - in: path
          name: owner
          description: owner of file
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Download the file
          content:
            application/octet-stream:
              schema:
                  type: string
                  format: binary
        '400':
          description: bad request
        '401':
          description: unauthorized
        '403':
          description: the user authenticated does not have access to file
        '404':
          description: when the file does not exist
  /fs/deployment_request/{uuid}/{owner}:
    get:
      tags:
        - Deployment requests
      summary: Get deployment requests of file
      parameters:
        - in: path
          name: uuid
          description: uuid of file
          required: true
          schema:
            type: string
        - in: path
          name: owner
          description: owner of file
          required: true
          schema:
            type: string
        - in: query
          name: site
          description: deployment site to filter
          required: false
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: list of deployment requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeploymentRequest'
        '204':
          description: no content
        '400':
          description: bad request
        '401':
          description: unauthorized
        '403':
          description: the user authenticated does not have access
        '404':
          description: not found
    post:
      tags:
        - Deployment requests
      summary: Add deployment requests
      parameters:
        - in: path
          name: uuid
          description: uuid of file
          required: true
          schema:
            type: string
        - in: path
          name: owner
          description: owner of file
          required: true
          schema:
            type: string
      requestBody:
        description: deployment requests to add
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      security:
        - bearerAuthDeveloper: []
      responses:
        '200':
          description: ok
        '400':
          description: bad request
        '401':
          description: unauthorized
        '403':
          description: the user authenticated does not have access to file
        '404':
          description: not found (file or site)
    delete:
      tags:
        - Deployment requests
      summary: Delete a deployment request
      parameters:
        - in: query
          name: site
          description: site of deployment request
          required: true
          schema:
            type: string
      security:
        - bearerAuthDeveloper: []
      responses:
        '200':
          description: file removed
        '400':
          description: bad request
        '401':
          description: unauthorized
        '404':
          description: the file or deployment request does not exists
  /fs/deployment_request/deploy/{uuid}/{owner}:
    put:
      tags:
        - Deployment requests
      summary: Deploy a VNF
      parameters:
        - in: path
          name: uuid
          description: uuid of file
          required: true
          schema:
            type: string
        - in: path
          name: owner
          description: owner of file
          required: true
          schema:
            type: string
        - in: query
          name: site
          description: deployment site
          required: true
          schema:
            type: string
      security:
        - bearerAuthManager: []
      responses:
        '200':
          description: file deployed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
        '204':
          description: no content
        '400':
          description: bad request
        '401':
          description: unauthorized
        '404':
          description: the file does not exists
components:
  schemas:
    File:
      type: object
      properties:
        uuid:
          type: string
        owner:
          type: string
        deployment_requests:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentRequest'
    DeploymentRequest:
      type: object
      properties:
        site:
          type: string
        status:
          type: string
        date_request:
          type: string
          format: timestamp
  securitySchemes:
    bearerAuth:
      description: Both roles
      type: http
      scheme: bearer
    bearerAuthDeveloper:
      description: Only developer role
      type: http
      scheme: bearer
    bearerAuthManager:
      description: Only manager role
      type: http
      scheme: bearer